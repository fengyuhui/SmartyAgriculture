package cn.bupt.smartyagl.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.bupt.smartyagl.dao.autogenerate.ProjectMapper;
import cn.bupt.smartyagl.entity.autogenerate.AdditionExample.Criteria;
import cn.bupt.smartyagl.entity.autogenerate.Project;
import cn.bupt.smartyagl.entity.autogenerate.ProjectExample;
import cn.bupt.smartyagl.service.IProjectService;

/**
 * 
 * @author TMing
 *
 */
@Service
public class ProjectServiceImpl implements IProjectService {
//	@Autowired
//	private  FarmVisitsMapper farmVisitsMapper;
	
	@Autowired
	ProjectMapper projectMapper;
	
	@Override
	public boolean addFarmVisitBatch(List<Project> list) {
        
        int i = projectMapper.insertBatch(list);
        if (0 != i) 
        	return true;
        else 
        	return false;
	}

	@Override
	public boolean deleteFarmVisitTypeById(int id) {
		int i = projectMapper.deleteByPrimaryKey(id);
		if (0 != i)
			return true;
		else
			return false;
	}

	@Override
	public Project getFarmVisitTypeById(int id) {
		// 没有对应的对象怎么处理？
		Project farmVisits = projectMapper.selectByPrimaryKey(id);
		return farmVisits;
	}

	@Override
	public List<Project> getFarmVisitTypes() {
		
		List<Project> list = new ArrayList<Project>();
		ProjectExample farmVisitsExample = new ProjectExample();
		list = projectMapper.selectByExample(farmVisitsExample);
		return list;
	}

	@Override
	public boolean updateFarmVisitType(Project farmVisits) {
		int i = projectMapper.updateByPrimaryKey(farmVisits);
		if (0 != i)
			return true;
		else
			return false;
	}

	@Override
	public List<Project> getFarmVisitTypesBatch(List<Integer> list) {
		List<Project> typeList = projectMapper.selectByIds(list);
		return typeList;
	}

	@Override
	public boolean deleteFarmVisitTypeBatch(List<Integer> list) {
		int i = projectMapper.deleteBatch(list);
		if (0 != i)
			return true;
		else
			return false;
	}

	@Override
	public boolean batchUpdate(List<Project> list) {
		int i = projectMapper.batchUpdate(list);
		if (0 != i)
			return true;
		else
			return false;
	}

	@Override
	public boolean addType(Project project) {
		int i = projectMapper.insertSelective(project);
		if (i > 0)
			return true;
		else
			return false;
	}

	@Override
	public boolean deleteType(Integer id) {
		int i = projectMapper.deleteByPrimaryKey(id);
		if (i > 0)
			return true;
		else
			return false;
	}

	@Override
	public Project getType(int id) {
		Project project = projectMapper.selectByPrimaryKey(id);
		return project;
	}

	@Override
	public List<Project> getAllType() {
		List<Project> list = new ArrayList<Project>();
//		ProjectExample example = new ProjectExample();
//		list = projectMapper.selectByExample(example);
		list = projectMapper.selectAll();
		return list;
	}

	@Override
	public boolean updateType(int id) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public List<Project> getAllByStatus(Integer status) {
		List<Project> list = new ArrayList<Project>();
		list = projectMapper.getAllByStatus(status);
		return list;
	}

	@Override
	public boolean updateStatus(Integer id, Integer status) {
		Project project = new Project();
		project.setId(id);
		project.setAuditStatus(status);
		int i = projectMapper.updateByPrimaryKeySelective(project);
		if (i > 0)
			return true;
		else
			return false;
	
	}

	@Override
	public Integer getSourceIdById(Integer id) {
		return projectMapper.getSourceIdById(id);
	}

	@Override
	public Integer getAuditStatusById(Integer id) {
		return projectMapper.getAuditStatusById(id);
	}

}
