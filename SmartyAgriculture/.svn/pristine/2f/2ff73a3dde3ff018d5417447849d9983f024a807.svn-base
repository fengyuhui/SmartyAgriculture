package cn.bupt.smartyagl.entity.autogenerate;

import java.util.ArrayList;
import java.util.List;

public class FreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Fre
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Fre
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table Fre
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public FreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Fre
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andFirstweightIsNull() {
            addCriterion("firstweight is null");
            return (Criteria) this;
        }

        public Criteria andFirstweightIsNotNull() {
            addCriterion("firstweight is not null");
            return (Criteria) this;
        }

        public Criteria andFirstweightEqualTo(Double value) {
            addCriterion("firstweight =", value, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightNotEqualTo(Double value) {
            addCriterion("firstweight <>", value, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightGreaterThan(Double value) {
            addCriterion("firstweight >", value, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightGreaterThanOrEqualTo(Double value) {
            addCriterion("firstweight >=", value, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightLessThan(Double value) {
            addCriterion("firstweight <", value, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightLessThanOrEqualTo(Double value) {
            addCriterion("firstweight <=", value, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightIn(List<Double> values) {
            addCriterion("firstweight in", values, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightNotIn(List<Double> values) {
            addCriterion("firstweight not in", values, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightBetween(Double value1, Double value2) {
            addCriterion("firstweight between", value1, value2, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightNotBetween(Double value1, Double value2) {
            addCriterion("firstweight not between", value1, value2, "firstweight");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceIsNull() {
            addCriterion("firstweightprice is null");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceIsNotNull() {
            addCriterion("firstweightprice is not null");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceEqualTo(Double value) {
            addCriterion("firstweightprice =", value, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceNotEqualTo(Double value) {
            addCriterion("firstweightprice <>", value, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceGreaterThan(Double value) {
            addCriterion("firstweightprice >", value, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("firstweightprice >=", value, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceLessThan(Double value) {
            addCriterion("firstweightprice <", value, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceLessThanOrEqualTo(Double value) {
            addCriterion("firstweightprice <=", value, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceIn(List<Double> values) {
            addCriterion("firstweightprice in", values, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceNotIn(List<Double> values) {
            addCriterion("firstweightprice not in", values, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceBetween(Double value1, Double value2) {
            addCriterion("firstweightprice between", value1, value2, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andFirstweightpriceNotBetween(Double value1, Double value2) {
            addCriterion("firstweightprice not between", value1, value2, "firstweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightIsNull() {
            addCriterion("additionweight is null");
            return (Criteria) this;
        }

        public Criteria andAdditionweightIsNotNull() {
            addCriterion("additionweight is not null");
            return (Criteria) this;
        }

        public Criteria andAdditionweightEqualTo(Double value) {
            addCriterion("additionweight =", value, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightNotEqualTo(Double value) {
            addCriterion("additionweight <>", value, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightGreaterThan(Double value) {
            addCriterion("additionweight >", value, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightGreaterThanOrEqualTo(Double value) {
            addCriterion("additionweight >=", value, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightLessThan(Double value) {
            addCriterion("additionweight <", value, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightLessThanOrEqualTo(Double value) {
            addCriterion("additionweight <=", value, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightIn(List<Double> values) {
            addCriterion("additionweight in", values, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightNotIn(List<Double> values) {
            addCriterion("additionweight not in", values, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightBetween(Double value1, Double value2) {
            addCriterion("additionweight between", value1, value2, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightNotBetween(Double value1, Double value2) {
            addCriterion("additionweight not between", value1, value2, "additionweight");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceIsNull() {
            addCriterion("additionweightprice is null");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceIsNotNull() {
            addCriterion("additionweightprice is not null");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceEqualTo(Double value) {
            addCriterion("additionweightprice =", value, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceNotEqualTo(Double value) {
            addCriterion("additionweightprice <>", value, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceGreaterThan(Double value) {
            addCriterion("additionweightprice >", value, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceGreaterThanOrEqualTo(Double value) {
            addCriterion("additionweightprice >=", value, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceLessThan(Double value) {
            addCriterion("additionweightprice <", value, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceLessThanOrEqualTo(Double value) {
            addCriterion("additionweightprice <=", value, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceIn(List<Double> values) {
            addCriterion("additionweightprice in", values, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceNotIn(List<Double> values) {
            addCriterion("additionweightprice not in", values, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceBetween(Double value1, Double value2) {
            addCriterion("additionweightprice between", value1, value2, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAdditionweightpriceNotBetween(Double value1, Double value2) {
            addCriterion("additionweightprice not between", value1, value2, "additionweightprice");
            return (Criteria) this;
        }

        public Criteria andAuditStatusIsNull() {
            addCriterion("auditStatus is null");
            return (Criteria) this;
        }

        public Criteria andAuditStatusIsNotNull() {
            addCriterion("auditStatus is not null");
            return (Criteria) this;
        }

        public Criteria andAuditStatusEqualTo(Integer value) {
            addCriterion("auditStatus =", value, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusNotEqualTo(Integer value) {
            addCriterion("auditStatus <>", value, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusGreaterThan(Integer value) {
            addCriterion("auditStatus >", value, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("auditStatus >=", value, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusLessThan(Integer value) {
            addCriterion("auditStatus <", value, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusLessThanOrEqualTo(Integer value) {
            addCriterion("auditStatus <=", value, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusIn(List<Integer> values) {
            addCriterion("auditStatus in", values, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusNotIn(List<Integer> values) {
            addCriterion("auditStatus not in", values, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusBetween(Integer value1, Integer value2) {
            addCriterion("auditStatus between", value1, value2, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andAuditStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("auditStatus not between", value1, value2, "auditStatus");
            return (Criteria) this;
        }

        public Criteria andSourceIdIsNull() {
            addCriterion("sourceId is null");
            return (Criteria) this;
        }

        public Criteria andSourceIdIsNotNull() {
            addCriterion("sourceId is not null");
            return (Criteria) this;
        }

        public Criteria andSourceIdEqualTo(Integer value) {
            addCriterion("sourceId =", value, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdNotEqualTo(Integer value) {
            addCriterion("sourceId <>", value, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdGreaterThan(Integer value) {
            addCriterion("sourceId >", value, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("sourceId >=", value, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdLessThan(Integer value) {
            addCriterion("sourceId <", value, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdLessThanOrEqualTo(Integer value) {
            addCriterion("sourceId <=", value, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdIn(List<Integer> values) {
            addCriterion("sourceId in", values, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdNotIn(List<Integer> values) {
            addCriterion("sourceId not in", values, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdBetween(Integer value1, Integer value2) {
            addCriterion("sourceId between", value1, value2, "sourceId");
            return (Criteria) this;
        }

        public Criteria andSourceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("sourceId not between", value1, value2, "sourceId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Fre
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table Fre
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}