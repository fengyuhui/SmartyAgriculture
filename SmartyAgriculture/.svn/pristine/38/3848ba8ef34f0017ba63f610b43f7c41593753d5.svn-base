package cn.bupt.smartyagl.controller;

import java.io.UnsupportedEncodingException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.Page;
import com.github.pagehelper.PageHelper;

import cn.bupt.smartyagl.constant.Constants;
import cn.bupt.smartyagl.constant.ConstantsSql;
import cn.bupt.smartyagl.entity.autogenerate.GoodsList;
import cn.bupt.smartyagl.entity.autogenerate.OrderView;
import cn.bupt.smartyagl.service.IOrderService;
import cn.bupt.smartyagl.service.IPushService;
import cn.bupt.smartyagl.util.DateTag;
import cn.bupt.smartyagl.util.TimeUtil;

/**
 * 
 * <p>
 * Title:OrderViewController
 * </p>
 * <p>
 * Description:
 * </p>
 * 
 * @author lz_w
 * @date 2016-6-12 下午7:45:22
 * 
 */
@Controller
@RequestMapping("/order")
public class OrderViewController extends BaseController {
	@Autowired
	IOrderService orderService;
	@Autowired
	IPushService pushService;
	
	int pageSize = Constants.PAGESIZE;// 每一页的大小

	/**
	 * 显示订单列表
	 * 
	 * @author lz_w
	 * @throws UnsupportedEncodingException 
	 */

	@SuppressWarnings("rawtypes")
	@RequestMapping(value = "/index/{allPages}/{currentPage}/{type}/{starttime}/{endtime}")
	public ModelAndView orderIndex(
			@PathVariable(value = "allPages") int allPages,
			@PathVariable(value = "currentPage") int currentPage,
			@PathVariable(value = "type") String type,
			@PathVariable(value="starttime")String starttime,
			@PathVariable(value="endtime")String endtime) throws UnsupportedEncodingException {
		ModelAndView modelAndView=new ModelAndView(Constants.ORDER_LIST);
        Date starttimeDate=null;      
        if (!starttime.equals("0000-00-00")) {
        	starttimeDate= (Date) DateTag.stringConvertDate(starttime);
        	starttime=starttime.replaceFirst("-","年");
        	starttime=starttime.replace("-","月");
        	starttime=starttime+"日";
        	modelAndView.addObject("starttime", "\""+starttime+"\"");
        	
		}
        Date endtimeDate = null;
        if(endtime.equals("0000-00-00")){
        	endtimeDate=(Date) new java.util.Date();
        }
        else {
        	endtimeDate=(Date) DateTag.stringConvertDate(endtime);  
        	
        	endtime=endtime.replaceFirst("-","年");
        	endtime=endtime.replace("-","月");
        	endtime=endtime+"日";
        	modelAndView.addObject("endtime", "\""+endtime+"\"");	
		}
		if ("prvious".equals(type)) {
			if (currentPage > 1) {// 第一页不能往前翻页
				currentPage--;
			}
		} else if ("next".equals(type)) {
			currentPage++;
		} else if ("first".equals(type)) {
			currentPage = 1;
		} else if ("last".equals(type)) {
			currentPage = allPages;
		} else {
			currentPage = Integer.parseInt(type);
		}

		orderService.getOrderList(0, modelAndView, currentPage, pageSize, "buyTime desc",starttimeDate
				,endtimeDate);
        //订单状态
		Map<Integer, String> orderStatusMap=new HashMap<Integer, String>();
		//orderStatusMap.put(ConstantsSql., value)
		
        return modelAndView;

	}
	/**
	 * 编辑订单的状态
	 * @param id
	 * @param status
	 * @return
	 */
	@RequestMapping("/updateOrderStatus")
	@ResponseBody
	public  Map<String, String> updateOrderStatus(int id,int status,String tracking) {
		boolean flag=orderService.updateOrderStatus(id, status,tracking);
		Map<String, String> returnMap=new HashMap<String, String>();
		if(flag){
			returnMap.put("msg", "修改成功");
		}
		else{
			returnMap.put("msg", "修改失败");
		}
		return returnMap;	
	}
	@RequestMapping(value = "/exportExcelOrder/{starttime}/{endtime}")
	public void ExportExcelUserStatistics(
			@PathVariable(value="starttime")String starttime,
			@PathVariable(value="endtime")String endtime,
			HttpServletResponse response){
		System.out.println("starttime:" + starttime);
		System.out.println("endtime:" + endtime);
		Date starttimeDate=null;      
        if (!starttime.equals("0000-00-00")) {
        		starttimeDate= (Date) DateTag.stringConvertDate(starttime);	
		}
        Date endtimeDate = null;
        if(endtime.equals("0000-00-00")){
        	endtimeDate=(Date) new java.util.Date();
        }
        else if(starttime!=null){
        	endtimeDate=(Date) DateTag.stringConvertDate(endtime);  	
		}
        Long st = System.currentTimeMillis();
		orderService.exportExcelOrder(starttimeDate, endtimeDate, response);
		long end = System.currentTimeMillis();
		System.out.println("总耗时："+(end-st)/1000 +"s");
	}
}
